structure MockTokens : Tiger_TOKENS =
struct
type ('a, 'b) token = ('a * 'b)
type svalue = string
fun TYPE(i,j) = ("TYPE", i)
fun VAR(i,j) = ("VAR", i)
fun FUNCTION(i,j) = ("FUNCTION", i)
fun BREAK(i,j) = ("BREAK", i)
fun OF(i,j) = ("OF", i)
fun END(i,j) = ("END", i)
fun IN(i,j) = ("IN", i)
fun NIL(i,j) = ("NIL", i)
fun LET(i,j) = ("LET", i)
fun DO(i,j) = ("DO", i)
fun TO(i,j) = ("TO", i)
fun FOR(i,j) = ("FOR", i)
fun WHILE(i,j) = ("WHILE", i)
fun ELSE(i,j) = ("ELSE", i)
fun THEN(i,j) = ("THEN", i)
fun IF(i,j) = ("IF", i)
fun ARRAY(i,j) = ("ARRAY", i)
fun ASSIGN(i,j) = ("ASSIGN", i)
fun OR(i,j) = ("OR", i)
fun AND(i,j) = ("AND", i)
fun GE(i,j) = ("GE", i)
fun GT(i,j) = ("GT", i)
fun LE(i,j) = ("LE", i)
fun LT(i,j) = ("LT", i)
fun NEQ(i,j) = ("NEQ", i)
fun EQ(i,j) = ("EQ", i)
fun DIVIDE(i,j) = ("DIVIDE", i)
fun TIMES(i,j) = ("TIMES", i)
fun MINUS(i,j) = ("MINUS", i)
fun PLUS(i,j) = ("PLUS", i)
fun DOT(i,j) = ("DOT", i)
fun RBRACE(i,j) = ("RBRACE", i)
fun LBRACE(i,j) = ("LBRACE", i)
fun RBRACK(i,j) = ("RBRACK", i)
fun LBRACK(i,j) = ("LBRACK", i)
fun RPAREN(i,j) = ("RPAREN", i)
fun LPAREN(i,j) = ("LPAREN", i)
fun SEMICOLON(i,j) = ("SEMICOLON", i)
fun COLON(i,j) = ("COLON", i)
fun COMMA(i,j) = ("COMMA", i)
fun STRING(s,i,j) = ("STRING("^s^")", i)
fun INT(c,i,j) = ("INT("^Int.toString(c)^")", i)
fun ID(s,i,j) = ("ID("^s^")", i)
fun EOF(i,j) = ("EOF", i)
end
